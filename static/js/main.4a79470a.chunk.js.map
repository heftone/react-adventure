{"version":3,"sources":["images/leftAbout_USE.jpg","images/middleRightHome_USEALT.JPG","components/Home.js","components/About.js","components/Contact.js","components/Submit.js","components/Error.js","components/Navigation.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Home","react_default","a","createElement","About","Container","Row","Col","src","pic1","alt","width","height","pic2","Contact","Submit","type","name","value","Error","Navigation","react_router_dom","to","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","handleChange","bind","assertThisInitialized","handleSubmit","event","setState","target","react_router","alert","preventDefault","components_Navigation","path","component","exact","onSubmit","onChange","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.4a79470a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/leftAbout_USE.4a84080c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/middleRightHome_USEALT.f5ee25fe.JPG\";","import React from \"react\";\n\nconst Home = () => {\n    return (\n        <div>\n            <p>This is the home page of the most amazing adventure game.</p>\n        </div>\n    );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport pic1 from \"../images/leftAbout_USE.jpg\";\nimport pic2 from \"../images/middleRightHome_USEALT.JPG\";\n\n\nconst About = () => {\n    return (\n        \n<html>\n\n            \n  <head>\n\n  </head>\n    <title>Recording and Video Production Studio</title> \n                     \n  \n    \n    <body>\n    <Container>\n\n  <Row>\n    <Col><img src={pic1} alt=\"1\" width=\"618\" height=\"464\"/></Col>\n    <Col><p>HEFTONE STUDIOS LLC, established by two brothers, Tim and Dan Heflin, is the first and only audio and video recording studio in Rocklin, CA.  And no, this is not the show \"Parenthood\".  Tim, the older brother, has successfully owned and operated an x-ray imaging company for over 25 years.  Dan, the younger brother, has a bachelors in music, a professional musician specializing in sax, and award winning short film director .  Okay, maybe a little like Parenthood.......</p></Col>\n  </Row>\n<br></br>\n  <Row>\n    <Col><p>One thing that is certain, HEFTONE STUDIOS is dedicated to providing the absolute best product to its customers by matching high quality technology with creativity and skill. Our state of the art tracking room has been designed with variable, acoustic options for all recording possibilities, even 5.1 Dolby playback. YouTube , iTunes, Pandora as well as social media outlets such as Facebook and Twitter is our focus to get our artists creative work seen and heard!</p></Col>\n    <Col><img src={pic2} alt=\"2\" width=\"618\" height=\"412\"/></Col>\n  </Row>\n\n      </Container>\n        \n    </body>\n\n\n    </html>\n    );\n};\n\nexport default About;","import React from \"react\";\n\nconst Contact = () => {\n    return (\n        <div>\n            <p>Contact</p>\n        </div>\n    );\n};\n\nexport default Contact;","import React, { Component } from 'react';\n\nimport { Route } from \"react-router-dom\";\n//import ReactDOM from 'react-dom';\n//import About from \"./components/About\";\n//import Contact from \"/Contact\";\n//import Submit from \"./components/Submit\";\n\n\nconst Submit = () => {\n    return (\n        <div>\n            <form>\n  <label>\n    Choose your path:\n    <input type=\"text\" name=\"name\" />\n  </label>\n  <input type=\"submit\" value=\"Submit\" />\n</form>\n        </div>\n    );\n};\n\nfunction Answer(props) {\n    const theAnswer = \"hello\";\n    \n    if (theAnswer) {\n        return (\n            alert(\"Hello\")\n        )\n    }\n\n}\n\nexport default Submit;","import React from \"react\";\n\nconst Error = () => {\n    return (\n        <div>\n            <p>Error: Page does not exist.</p>\n        </div>\n    );\n};\n\nexport default Error;","import React from 'react';\nimport { NavLink } from \"react-router-dom\";\n\nconst Navigation = () => {\n\n    return (\n        <div>\n            <NavLink to=\"/\"></NavLink>\n            <NavLink to=\"/about\"></NavLink>\n            <NavLink to=\"/contact\"></NavLink>\n        </div>\n    );\n};\n\nexport default Navigation;","import React, { Component } from 'react';\nimport { HashRouter, Route, Redirect, Switch } from \"react-router-dom\";\n//import ReactDOM from \"react-dom\";\n\nimport Home from \"./components/Home\";\nimport About from \"./components/About\";\nimport Contact from \"./components/Contact\";\nimport Submit from \"./components/Submit\";\nimport Error from \"./components/Error\";\nimport Navigation from \"./components/Navigation\";\n//import Game from \"./components/Game\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: ''\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({value: event.target.value});\n  }\n\n\n  handleSubmit(event) {\n     \n      if (this.state.value === \"north\"){\n        //alert('An essay was submitted: ' + this.state.value);\n        return <Redirect to='/about' />\n       \n      }\n      if (this.state.value ===\"south\"){\n        alert('You are going South');\n      }\n      else {\n\n      alert('Please type correct answer');\n}\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n\n<HashRouter>\n<div>\n  \n  <Navigation />\n  <Switch>\n   \n\n   <Route path=\"/\" component={Home} exact />\n   <Route path=\"/about\" component={About} />\n    <Route path=\"/contact\" component={Contact} />\n    <Route path=\"/submit\" component={Submit} />\n    <Route component={Error} />\n  </Switch>\n  \n  \n  <div>\n      <form onSubmit={this.handleSubmit}>\n      <label>\n        Essay:\n        <input value={this.state.value} onChange={this.handleChange} />\n      </label>\n      <input type=\"submit\" value=\"Submit\" />\n    </form>\n</div>\n\n</div>\n</HashRouter>\n\n    );\n  }\n}\n\nexport default App;\n\n/*\n\n<Game />\n\n\n  */\n \n \n \n  /*    \n\n   function validateForm() {\n  var x = document.forms[\"myForm\"][\"fname\"].value;\n  if (x == \"\") {\n    alert(\"Name must be filled out\");\n    return false;\n  }\n  if (x == \"yes\") {\n    return component={About}\n  }\n}\n   */\n\n\n/*\n\nfunction validate(name) {\n  const story1 = [];\n\n \n      if (name === \"yes\" || name ===\"no\") {\n        story1.push(\"I am Grod from Zod!\");\n      }\n      if (name === \"hi\" || name ===\"bye\") {\n        story1.push(\"Another Solar System\");\n      }\n      else {\n        story1.push(\"INVALID\");\n      }\n      return story1;\n    \n}\n\n\nclass Grod extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      name: \"\",\n      story1:[],\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n}\n\nhandleSubmit = e => {\n  e.preventDefault();\n\nconst { name } = this.state;\n\n\n  const story1 = validate(name);\n  if (story1.length > 0) {\n    this.setState({ story1 });\n\n\n    return;\n\n\n      \n  }\n\n//submit the data\n};\nrender() {\n\n  const { story1 } = this.state;\n\n  return (\n\n\n    <form onSubmit={this.handleSubmit}>\n    {story1.map(story1 => (\n      <p key={story1}>{story1}</p>\n      \n    ))}\n        <div>\n    <h1>Welcome to the story of GROD!!</h1>\n    </div>\n    <input\n      value={this.state.name}\n      onChange={evt => this.setState({ name: evt.target.value })}\n      type=\"text\"\n      placeholder=\"Name\"\n      />\n      <button type=\"submit\">Press Enter Mortal!</button>\n      <h1>{ story1 }</h1>\n\n    </form>\n\n    \n\n\n    );\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<Grod />, rootElement);\n\nserviceWorker.unregister();\n\n\n\n*/","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n//serviceWorker.unregister();\n"],"sourceRoot":""}